@startuml ClassDiagram

class MediaFile {
    - name: string
    - path: string
    - type: string
    - size: long
    - metadata: map<string, string>
    + MediaFile(name: string, path: string, type: string, size: long)
    + getName(): string
    + setName(name: string): void
    + getMetadata(): map<string, string>
    + setMetadata(metadata: map<string, string>): void
    + getPath(): string
    + getType(): string
    + getSize(): long
}

class Playlist {
    - name: string
    - files: vector<MediaFile>
    + Playlist(name: string)
    + getName(): string
    + setName(name: string): void
    + addFile(file: MediaFile): void
    + removeFile(file: MediaFile): void
    + getFiles(): vector<MediaFile>
}

class CLIView {
    - playlistController: PlaylistController
    - playbackController: PlaybackController
    - fileController: FileController
    - metadataController: MetadataController
    - deviceController: DeviceController
    + setPlaylistController(controller: PlaylistController): void
    + setPlaybackController(controller: PlaybackController): void
    + setFileController(controller: FileController): void
    + setMetadataController(controller: MetadataController): void
    + setDeviceController(controller: DeviceController): void
    + displayFiles(files: vector<MediaFile>): void
    + displayPlaylists(playlists: vector<Playlist>): void
    + displayMetadata(metadata: map<string, string>): void
    + showMessage(message: string): void
    + getUserInput(): void
}

class FileController {
    - model: vector<MediaFile>
    + FileController(model: vector<MediaFile>)
    + scanDirectory(path: string): vector<MediaFile>
    + scanUSBDevice(): vector<MediaFile>
    + getFiles(): vector<MediaFile>
}

class PlaybackController {
    - currentFile: MediaFile
    - isPlaying: bool
    - volume: int
    + play(file: MediaFile): void
    + pause(): void
    + stop(): void
    + next(): void
    + previous(): void
    + setVolume(level: int): void
    + getVolume(): int
    + isFilePlaying(): bool
}

class MetadataController {
    - model: vector<MediaFile>
    + MetadataController(model: vector<MediaFile>)
    + getMetadata(file: MediaFile): map<string, string>
    + updateMetadata(file: MediaFile, metadata: map<string, string>): void
}

class PlaylistController {
    - playlists: vector<Playlist>
    + PlaylistController(playlists: vector<Playlist>)
    + createPlaylist(name: string): void
    + updatePlaylist(name: string, files: vector<MediaFile>): void
    + deletePlaylist(name: string): void
    + getPlaylists(): vector<Playlist>
}

class DeviceView {
    + displayNowPlaying(song: string, duration: string): void
    + displayVolume(level: int): void
    + showDeviceMessage(message: string): void
}

class DeviceController {
    - deviceView: DeviceView
    + DeviceController(view: DeviceView)
    + controlVolume(level: int): void
    + controlPlayback(action: string): void
    + displayOnDevice(song: string, duration: string): void
}

MediaFile "1" --o "*" Playlist : contains
PlaylistController "1" -- "*" Playlist : manages
MetadataController "1" -- "*" MediaFile : modifies
FileController "1" -- "*" MediaFile : scans
PlaybackController "1" -- "*" MediaFile : plays
DeviceController "1" -- "*" DeviceView : controls

CLIView "1" --> "*" PlaylistController : interacts with
CLIView "1" --> "*" PlaybackController : interacts with
CLIView "1" --> "*" MetadataController : interacts with
CLIView "1" --> "*" FileController : interacts with
CLIView "1" --> "*" DeviceController : interacts with

@enduml
